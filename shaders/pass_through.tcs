#version 430 core
layout (vertices = 3) out;

//inputs
in VS_OUT
{ 
  vec3 vNormal; 
  vec3 vPosW; 
  vec2 vTexCoords;
  int triangleIndexes[3];
  int vertexID; 
} tcs_in[]; 

//outputs
out TCS_OUT
{ 
  vec3 vNormal; 
  vec3 vPosW; 
  vec2 vTexCoords; 
} tes_in[]; 

void main ()
{
  // pass-through original vertices
  tes_in[gl_InvocationID].vPosW = tcs_in[gl_InvocationID].vPosW;
  tes_in[gl_InvocationID].vNormal = tcs_in[gl_InvocationID].vNormal;
  tes_in[gl_InvocationID].vTexCoords = tcs_in[gl_InvocationID].vTexCoords;

  gl_TessLevelInner[ 0 ] = 0.0f;
  
  gl_TessLevelOuter[ 0 ] = 0.0f;
  gl_TessLevelOuter[ 1 ] = 0.0f;
  gl_TessLevelOuter[ 2 ] = 0.0f;

}