#version 430 core
layout (vertices = 3) out;

//uniforms
uniform vec3 seamVertex[];
uniform uint seamVertexCount;

//inputs
in vec3 WorldPos_CS_in[];
in vec2 TexCoord_CS_in[];
in vec3 Normal_CS_in[];

//outputs
out vec3 WorldPos_ES_in[];
out vec2 TexCoord_ES_in[];
out vec3 Normal_ES_in[];

void main ()
{
  // pass-through original vertices
  TexCoord_ES_in[gl_InvocationID] = TexCoord_CS_in[gl_InvocationID];
  Normal_ES_in[gl_InvocationID] = Normal_CS_in[gl_InvocationID];
  WorldPos_ES_in[gl_InvocationID] = WorldPos_CS_in[gl_InvocationID];

  // primitive setup once
  if (gl_InvocationID == 0)
  {
    gl_TessLevelInner[ 0 ] = 3;
 
    gl_TessLevelOuter[ 0 ] = 3;
    gl_TessLevelOuter[ 1 ] = 3;
    gl_TessLevelOuter[ 2 ] = 3;
  }

}